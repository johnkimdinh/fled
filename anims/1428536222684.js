{"name":"Bressenham","filename":"1428536222684.js","author":"Ben","code":"\r\nvar tweenedValues = {\r\n    hue: 0\r\n};\r\n\r\nvar a = {x:0,y:0}, b = {x:0,y:0},\r\n    aTarget = null, bTarget = null,\r\n    aTween = null, bTween = null;\r\n\r\nfunction getIndex(x,y, display) {\r\n    return x + (y*display.cols);\r\n}\r\n\r\nfunction plot(x, y, c, display, color) {\r\n    var index = getIndex(x,y,display);\r\n    if (index > display.leds.length || index < 0) {\r\n        return;\r\n    }\r\n    //plot the pixel at (x, y) with brightness c (where 0 ≤ c ≤ 1)\r\n    var hsl = color.getHSL();\r\n    hsl.l = c*0.5;\r\n    var col = new Color();\r\n    col.setHSL(hsl.h, hsl.s, hsl.l);\r\n    \r\n    display.setColor(index, col, 'add');\r\n}\r\n     \r\n \r\nfunction ipart(x) {\r\n     return ~~x;\r\n}\r\n \r\nfunction round(x) {\r\n     return ipart(x + 0.5);\r\n}\r\n \r\nfunction fpart(x) {\r\n     return x%1;\r\n}\r\n \r\nfunction rfpart(x) {\r\n     return 1 - fpart(x);\r\n}\r\n\r\nfunction line(x0,y0, x1, y1, color, display) {\r\n    var steep = Math.abs(y1 - y0) > Math.abs(x1 - x0),\r\n        tmp;\r\n    if (steep) {\r\n        tmp = x0;\r\n        x0 = y0;\r\n        y0 = tmp;\r\n        tmp = x1;\r\n        x1 = y1;\r\n        y1 = tmp;\r\n    }\r\n    if (x0 > x1) {\r\n        tmp = x0;\r\n        x0 = x1;\r\n        x1 = tmp;\r\n        tmp = y0;\r\n        y0 = y1;\r\n        y1 = tmp;\r\n    }\r\n    var dx = x1 - x0,\r\n        dy = y1 - y0;\r\n        \r\n    var gradient = dy/dx;\r\n    \r\n    var xend = Math.round(x0),\r\n        yend = y0 + gradient * (xend - x0),\r\n        xgap = rfpart(x0 + 0.5),\r\n        xpxl1 = xend,   //this will be used in the main loop\r\n        ypxl1 = ipart(yend);\r\n        \r\n     if (steep) {\r\n         plot(ypxl1,   xpxl1, rfpart(yend) * xgap, display, color);\r\n         plot(ypxl1+1, xpxl1,  fpart(yend) * xgap, display, color);\r\n     } else {\r\n         plot(xpxl1, ypxl1  , rfpart(yend) * xgap, display, color);\r\n         plot(xpxl1, ypxl1+1,  fpart(yend) * xgap, display, color);\r\n     }\r\n     \r\n     var intery = yend + gradient; // first y-intersection for the main loop\r\n \r\n     // handle second endpoint\r\n     xend = Math.round(x1);\r\n     yend = y1 + gradient * (xend - x1);\r\n     xgap = fpart(x1 + 0.5);\r\n     var xpxl2 = xend, //this will be used in the main loop\r\n        ypxl2 = ipart(yend);\r\n        \r\n     if (steep) {\r\n         plot(ypxl2  , xpxl2, rfpart(yend) * xgap, display, color);\r\n         plot(ypxl2+1, xpxl2,  fpart(yend) * xgap, display, color);\r\n     } else {\r\n         plot(xpxl2, ypxl2,  rfpart(yend) * xgap, display, color);\r\n         plot(xpxl2, ypxl2+1, fpart(yend) * xgap, display, color);\r\n     }\r\n \r\n     // main loop\r\n \r\n     for (var x = xpxl1 + 1; x <= xpxl2 - 1; x++) {\r\n         if (steep) {\r\n             plot(ipart(intery)  , x, rfpart(intery), display, color);\r\n             plot(ipart(intery)+1, x,  fpart(intery), display, color);\r\n         } else {\r\n             plot(x, ipart (intery),  rfpart(intery), display, color);\r\n             plot(x, ipart (intery)+1, fpart(intery), display, color);\r\n         }\r\n         intery = intery + gradient;\r\n     }\r\n}\r\n\r\nfunction randomPoint(point) {\r\n    if (!point) {\r\n        point = {x:0, y:0};\r\n    }\r\n    point.x = Math.random()*51;\r\n    point.y = Math.random()*33;\r\n    return point;\r\n}\r\n\r\nreturn {\r\n    updateTween: function(aOrB, reversed) {\r\n        // select random a and b targets\r\n        var target = aOrB == 'a' ? aTarget : bTarget;\r\n        var tween = aOrB == 'a' ? aTween : bTween;\r\n        var src = aOrB == 'a' ? a : b;\r\n        \r\n        tween.from({\r\n            x: target.x,\r\n            y: target.y\r\n        });\r\n        randomPoint(target);\r\n        var duration = 2000+300;\r\n        /*tween.from({\r\n            x: src.x,\r\n            y: src.y\r\n        });*/\r\n        tween.to({\r\n            x: target.x,\r\n            y: target.y\r\n        }, duration);\r\n        \r\n        tween.start();\r\n    },\r\n    startTween: function() {\r\n        \r\n        // select random a and b targets\r\n        aTarget = randomPoint(aTarget);\r\n        bTarget = randomPoint(bTarget);\r\n        \r\n        var duration = 2000+300;\r\n        aTween = new TWEEN.Tween(a)\r\n            .to({\r\n                x: aTarget.x,\r\n                y: aTarget.y\r\n            }, duration);\r\n        aTween.repeat(Infinity);\r\n        aTween.easing(TWEEN.Easing.Cubic.InOut);\r\n        bTween = new TWEEN.Tween(b)\r\n            .to({\r\n                x: bTarget.x,\r\n                y: bTarget.y\r\n            }, duration);\r\n        bTween.repeat(Infinity);\r\n        bTween.easing(TWEEN.Easing.Cubic.InOut);\r\n        \r\n        aTween.onRepeat(this.updateTween.bind(this,'a'));\r\n        bTween.onRepeat(this.updateTween.bind(this,'b'));\r\n        \r\n        this.display.tweens.push(aTween);\r\n        this.display.tweens.push(bTween);\r\n    },\r\n    init: function(display,timeline) {\r\n        this.display = display;\r\n    //debugger;\r\n        display.tween(tweenedValues,{\r\n          to: {hue: 1},\r\n          duration: 5000,\r\n          repeat: Infinity,\r\n          yoyo: true,\r\n          delay: 0,\r\n          easing: TWEEN.Easing.Cubic.InOut\r\n        });\r\n        \r\n        // calculate random a and b points\r\n        randomPoint(a);\r\n        randomPoint(b);\r\n        \r\n        display.clear();\r\n        \r\n        this.startTween();\r\n    },\r\n    onUpdate: function(display, data) {\r\n        var c = null;\r\n\r\n        //display.clear();\r\n        \r\n        for (var i=0; i < display.leds.length; ++i) {\r\n            display.leds[i].multiplyScalar(0.94);\r\n        }\r\n        \r\n        var h = ((tweenedValues.hue))%1,\r\n            s = 1,\r\n            l = 0.5;\r\n        var c = new Color();\r\n        c.setHSL(h,s,l);\r\n        // draw the line\r\n        line(a.x,a.y,b.x,b.y, c, display);\r\n        \r\n    }\r\n};","publish":true,"script":{}}